
Voltmeter.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000658  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000014  00800060  00000658  000006ec  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000000e  00800074  00800074  00000700  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000700  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000730  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000040  00000000  00000000  0000076c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000641  00000000  00000000  000007ac  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000558  00000000  00000000  00000ded  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000326  00000000  00000000  00001345  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000d8  00000000  00000000  0000166c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000325  00000000  00000000  00001744  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000185  00000000  00000000  00001a69  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000030  00000000  00000000  00001bee  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	12 c0       	rjmp	.+36     	; 0x26 <__ctors_end>
   2:	2c c0       	rjmp	.+88     	; 0x5c <__bad_interrupt>
   4:	2b c0       	rjmp	.+86     	; 0x5c <__bad_interrupt>
   6:	2a c0       	rjmp	.+84     	; 0x5c <__bad_interrupt>
   8:	29 c0       	rjmp	.+82     	; 0x5c <__bad_interrupt>
   a:	28 c0       	rjmp	.+80     	; 0x5c <__bad_interrupt>
   c:	27 c0       	rjmp	.+78     	; 0x5c <__bad_interrupt>
   e:	26 c0       	rjmp	.+76     	; 0x5c <__bad_interrupt>
  10:	25 c0       	rjmp	.+74     	; 0x5c <__bad_interrupt>
  12:	93 c0       	rjmp	.+294    	; 0x13a <__vector_9>
  14:	23 c0       	rjmp	.+70     	; 0x5c <__bad_interrupt>
  16:	22 c0       	rjmp	.+68     	; 0x5c <__bad_interrupt>
  18:	21 c0       	rjmp	.+66     	; 0x5c <__bad_interrupt>
  1a:	20 c0       	rjmp	.+64     	; 0x5c <__bad_interrupt>
  1c:	06 c1       	rjmp	.+524    	; 0x22a <__vector_14>
  1e:	1e c0       	rjmp	.+60     	; 0x5c <__bad_interrupt>
  20:	1d c0       	rjmp	.+58     	; 0x5c <__bad_interrupt>
  22:	1c c0       	rjmp	.+56     	; 0x5c <__bad_interrupt>
  24:	1b c0       	rjmp	.+54     	; 0x5c <__bad_interrupt>

00000026 <__ctors_end>:
  26:	11 24       	eor	r1, r1
  28:	1f be       	out	0x3f, r1	; 63
  2a:	cf e5       	ldi	r28, 0x5F	; 95
  2c:	d4 e0       	ldi	r29, 0x04	; 4
  2e:	de bf       	out	0x3e, r29	; 62
  30:	cd bf       	out	0x3d, r28	; 61

00000032 <__do_copy_data>:
  32:	10 e0       	ldi	r17, 0x00	; 0
  34:	a0 e6       	ldi	r26, 0x60	; 96
  36:	b0 e0       	ldi	r27, 0x00	; 0
  38:	e8 e5       	ldi	r30, 0x58	; 88
  3a:	f6 e0       	ldi	r31, 0x06	; 6
  3c:	02 c0       	rjmp	.+4      	; 0x42 <__SREG__+0x3>
  3e:	05 90       	lpm	r0, Z+
  40:	0d 92       	st	X+, r0
  42:	a4 37       	cpi	r26, 0x74	; 116
  44:	b1 07       	cpc	r27, r17
  46:	d9 f7       	brne	.-10     	; 0x3e <__SP_H__>

00000048 <__do_clear_bss>:
  48:	20 e0       	ldi	r18, 0x00	; 0
  4a:	a4 e7       	ldi	r26, 0x74	; 116
  4c:	b0 e0       	ldi	r27, 0x00	; 0
  4e:	01 c0       	rjmp	.+2      	; 0x52 <.do_clear_bss_start>

00000050 <.do_clear_bss_loop>:
  50:	1d 92       	st	X+, r1

00000052 <.do_clear_bss_start>:
  52:	a2 38       	cpi	r26, 0x82	; 130
  54:	b2 07       	cpc	r27, r18
  56:	e1 f7       	brne	.-8      	; 0x50 <.do_clear_bss_loop>
  58:	59 d1       	rcall	.+690    	; 0x30c <main>
  5a:	fc c2       	rjmp	.+1528   	; 0x654 <_exit>

0000005c <__bad_interrupt>:
  5c:	d1 cf       	rjmp	.-94     	; 0x0 <__vectors>

0000005e <chislo>:
	0b01101111, //9
	0b10000000  //.
};

void chislo (unsigned int vse_chislo)
{
  5e:	cf 93       	push	r28
  60:	df 93       	push	r29
  62:	ac 01       	movw	r20, r24
	r1_1000 = vse_chislo/1000;
  64:	ec 01       	movw	r28, r24
  66:	d6 95       	lsr	r29
  68:	c7 95       	ror	r28
  6a:	d6 95       	lsr	r29
  6c:	c7 95       	ror	r28
  6e:	d6 95       	lsr	r29
  70:	c7 95       	ror	r28
  72:	9e 01       	movw	r18, r28
  74:	a5 ec       	ldi	r26, 0xC5	; 197
  76:	b0 e2       	ldi	r27, 0x20	; 32
  78:	e1 d2       	rcall	.+1474   	; 0x63c <__umulhisi3>
  7a:	fc 01       	movw	r30, r24
  7c:	f2 95       	swap	r31
  7e:	e2 95       	swap	r30
  80:	ef 70       	andi	r30, 0x0F	; 15
  82:	ef 27       	eor	r30, r31
  84:	ff 70       	andi	r31, 0x0F	; 15
  86:	ef 27       	eor	r30, r31
  88:	f0 93 81 00 	sts	0x0081, r31	; 0x800081 <r1_1000+0x1>
  8c:	e0 93 80 00 	sts	0x0080, r30	; 0x800080 <r1_1000>
	r2_100 = vse_chislo%1000/100;
  90:	28 ee       	ldi	r18, 0xE8	; 232
  92:	33 e0       	ldi	r19, 0x03	; 3
  94:	e2 9f       	mul	r30, r18
  96:	c0 01       	movw	r24, r0
  98:	e3 9f       	mul	r30, r19
  9a:	90 0d       	add	r25, r0
  9c:	f2 9f       	mul	r31, r18
  9e:	90 0d       	add	r25, r0
  a0:	11 24       	eor	r1, r1
  a2:	9a 01       	movw	r18, r20
  a4:	28 1b       	sub	r18, r24
  a6:	39 0b       	sbc	r19, r25
  a8:	36 95       	lsr	r19
  aa:	27 95       	ror	r18
  ac:	36 95       	lsr	r19
  ae:	27 95       	ror	r18
  b0:	ab e7       	ldi	r26, 0x7B	; 123
  b2:	b4 e1       	ldi	r27, 0x14	; 20
  b4:	c3 d2       	rcall	.+1414   	; 0x63c <__umulhisi3>
  b6:	96 95       	lsr	r25
  b8:	87 95       	ror	r24
  ba:	90 93 7f 00 	sts	0x007F, r25	; 0x80007f <r2_100+0x1>
  be:	80 93 7e 00 	sts	0x007E, r24	; 0x80007e <r2_100>
	r3_10 = vse_chislo%100/10;
  c2:	9a 01       	movw	r18, r20
  c4:	36 95       	lsr	r19
  c6:	27 95       	ror	r18
  c8:	36 95       	lsr	r19
  ca:	27 95       	ror	r18
  cc:	b7 d2       	rcall	.+1390   	; 0x63c <__umulhisi3>
  ce:	9c 01       	movw	r18, r24
  d0:	36 95       	lsr	r19
  d2:	27 95       	ror	r18
  d4:	64 e6       	ldi	r22, 0x64	; 100
  d6:	62 9f       	mul	r22, r18
  d8:	c0 01       	movw	r24, r0
  da:	63 9f       	mul	r22, r19
  dc:	90 0d       	add	r25, r0
  de:	11 24       	eor	r1, r1
  e0:	9a 01       	movw	r18, r20
  e2:	28 1b       	sub	r18, r24
  e4:	39 0b       	sbc	r19, r25
  e6:	ad ec       	ldi	r26, 0xCD	; 205
  e8:	bc ec       	ldi	r27, 0xCC	; 204
  ea:	a8 d2       	rcall	.+1360   	; 0x63c <__umulhisi3>
  ec:	96 95       	lsr	r25
  ee:	87 95       	ror	r24
  f0:	96 95       	lsr	r25
  f2:	87 95       	ror	r24
  f4:	96 95       	lsr	r25
  f6:	87 95       	ror	r24
  f8:	90 93 7d 00 	sts	0x007D, r25	; 0x80007d <r3_10+0x1>
  fc:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <r3_10>
	r4_1 = vse_chislo%10;
 100:	9a 01       	movw	r18, r20
 102:	9c d2       	rcall	.+1336   	; 0x63c <__umulhisi3>
 104:	96 95       	lsr	r25
 106:	87 95       	ror	r24
 108:	96 95       	lsr	r25
 10a:	87 95       	ror	r24
 10c:	96 95       	lsr	r25
 10e:	87 95       	ror	r24
 110:	9c 01       	movw	r18, r24
 112:	22 0f       	add	r18, r18
 114:	33 1f       	adc	r19, r19
 116:	88 0f       	add	r24, r24
 118:	99 1f       	adc	r25, r25
 11a:	88 0f       	add	r24, r24
 11c:	99 1f       	adc	r25, r25
 11e:	88 0f       	add	r24, r24
 120:	99 1f       	adc	r25, r25
 122:	82 0f       	add	r24, r18
 124:	93 1f       	adc	r25, r19
 126:	9a 01       	movw	r18, r20
 128:	28 1b       	sub	r18, r24
 12a:	39 0b       	sbc	r19, r25
 12c:	30 93 7b 00 	sts	0x007B, r19	; 0x80007b <r4_1+0x1>
 130:	20 93 7a 00 	sts	0x007A, r18	; 0x80007a <r4_1>
}
 134:	df 91       	pop	r29
 136:	cf 91       	pop	r28
 138:	08 95       	ret

0000013a <__vector_9>:
int z = 0;

float voltage = 0;

ISR (TIMER0_OVF_vect) // T = (8*256)/1000000 ~= 2ms --> interrupt
{
 13a:	1f 92       	push	r1
 13c:	0f 92       	push	r0
 13e:	0f b6       	in	r0, 0x3f	; 63
 140:	0f 92       	push	r0
 142:	11 24       	eor	r1, r1
 144:	8f 93       	push	r24
 146:	9f 93       	push	r25
 148:	ef 93       	push	r30
 14a:	ff 93       	push	r31
	z++;
 14c:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <z>
 150:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <z+0x1>
 154:	01 96       	adiw	r24, 0x01	; 1
 156:	90 93 79 00 	sts	0x0079, r25	; 0x800079 <z+0x1>
 15a:	80 93 78 00 	sts	0x0078, r24	; 0x800078 <z>
	if (z > 4) z = 1;
 15e:	05 97       	sbiw	r24, 0x05	; 5
 160:	34 f0       	brlt	.+12     	; 0x16e <__vector_9+0x34>
 162:	81 e0       	ldi	r24, 0x01	; 1
 164:	90 e0       	ldi	r25, 0x00	; 0
 166:	90 93 79 00 	sts	0x0079, r25	; 0x800079 <z+0x1>
 16a:	80 93 78 00 	sts	0x0078, r24	; 0x800078 <z>
	
	if (z == 1)
 16e:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <z>
 172:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <z+0x1>
 176:	81 30       	cpi	r24, 0x01	; 1
 178:	91 05       	cpc	r25, r1
 17a:	89 f4       	brne	.+34     	; 0x19e <__vector_9+0x64>
	{
		PORTB |= (1<<1) | (1<<2) | (1<<3);	// switch off 2, 3 and 4 bits
 17c:	88 b3       	in	r24, 0x18	; 24
 17e:	8e 60       	ori	r24, 0x0E	; 14
 180:	88 bb       	out	0x18, r24	; 24
		PORTB &= ~(1<<0);			// switch on 1 bit
 182:	88 b3       	in	r24, 0x18	; 24
 184:	8e 7f       	andi	r24, 0xFE	; 254
 186:	88 bb       	out	0x18, r24	; 24
		SEG7_PORT = digits [r1_1000];
 188:	e0 91 80 00 	lds	r30, 0x0080	; 0x800080 <r1_1000>
 18c:	f0 91 81 00 	lds	r31, 0x0081	; 0x800081 <r1_1000+0x1>
 190:	ee 0f       	add	r30, r30
 192:	ff 1f       	adc	r31, r31
 194:	e0 5a       	subi	r30, 0xA0	; 160
 196:	ff 4f       	sbci	r31, 0xFF	; 255
 198:	80 81       	ld	r24, Z
 19a:	82 bb       	out	0x12, r24	; 18
 19c:	3d c0       	rjmp	.+122    	; 0x218 <__EEPROM_REGION_LENGTH__+0x18>
		
	}
	else if(z == 2)
 19e:	82 30       	cpi	r24, 0x02	; 2
 1a0:	91 05       	cpc	r25, r1
 1a2:	a1 f4       	brne	.+40     	; 0x1cc <__vector_9+0x92>
	{
		PORTB |= (1<<0) | (1<<2) | (1<<3);	// switch off 1, 3 and 4 bits
 1a4:	88 b3       	in	r24, 0x18	; 24
 1a6:	8d 60       	ori	r24, 0x0D	; 13
 1a8:	88 bb       	out	0x18, r24	; 24
		PORTB &= ~(1<<1);			// switch on 2 bit
 1aa:	88 b3       	in	r24, 0x18	; 24
 1ac:	8d 7f       	andi	r24, 0xFD	; 253
 1ae:	88 bb       	out	0x18, r24	; 24
		SEG7_PORT = digits [r2_100];
 1b0:	e0 91 7e 00 	lds	r30, 0x007E	; 0x80007e <r2_100>
 1b4:	f0 91 7f 00 	lds	r31, 0x007F	; 0x80007f <r2_100+0x1>
 1b8:	ee 0f       	add	r30, r30
 1ba:	ff 1f       	adc	r31, r31
 1bc:	e0 5a       	subi	r30, 0xA0	; 160
 1be:	ff 4f       	sbci	r31, 0xFF	; 255
 1c0:	80 81       	ld	r24, Z
 1c2:	82 bb       	out	0x12, r24	; 18
		
		PORTD |= (1<<7);//.
 1c4:	82 b3       	in	r24, 0x12	; 18
 1c6:	80 68       	ori	r24, 0x80	; 128
 1c8:	82 bb       	out	0x12, r24	; 18
 1ca:	26 c0       	rjmp	.+76     	; 0x218 <__EEPROM_REGION_LENGTH__+0x18>
	}
	else if(z == 3)
 1cc:	83 30       	cpi	r24, 0x03	; 3
 1ce:	91 05       	cpc	r25, r1
 1d0:	89 f4       	brne	.+34     	; 0x1f4 <__vector_9+0xba>
	{
		PORTB |= (1<<0) | (1<<1) | (1<<3);	// switch off 1, 2 and 4 bits
 1d2:	88 b3       	in	r24, 0x18	; 24
 1d4:	8b 60       	ori	r24, 0x0B	; 11
 1d6:	88 bb       	out	0x18, r24	; 24
		PORTB &= ~(1<<2);			// switch on 3 bit
 1d8:	88 b3       	in	r24, 0x18	; 24
 1da:	8b 7f       	andi	r24, 0xFB	; 251
 1dc:	88 bb       	out	0x18, r24	; 24
		SEG7_PORT = digits [r3_10];
 1de:	e0 91 7c 00 	lds	r30, 0x007C	; 0x80007c <r3_10>
 1e2:	f0 91 7d 00 	lds	r31, 0x007D	; 0x80007d <r3_10+0x1>
 1e6:	ee 0f       	add	r30, r30
 1e8:	ff 1f       	adc	r31, r31
 1ea:	e0 5a       	subi	r30, 0xA0	; 160
 1ec:	ff 4f       	sbci	r31, 0xFF	; 255
 1ee:	80 81       	ld	r24, Z
 1f0:	82 bb       	out	0x12, r24	; 18
 1f2:	12 c0       	rjmp	.+36     	; 0x218 <__EEPROM_REGION_LENGTH__+0x18>
	}
	else if(z == 4)
 1f4:	04 97       	sbiw	r24, 0x04	; 4
 1f6:	81 f4       	brne	.+32     	; 0x218 <__EEPROM_REGION_LENGTH__+0x18>
	{
		PORTB |= (1<<0) | (1<<1) | (1<<2);	// switch off 1, 2 and 3 bits
 1f8:	88 b3       	in	r24, 0x18	; 24
 1fa:	87 60       	ori	r24, 0x07	; 7
 1fc:	88 bb       	out	0x18, r24	; 24
		PORTB &= ~(1<<3);			// switch on 4 bit
 1fe:	88 b3       	in	r24, 0x18	; 24
 200:	87 7f       	andi	r24, 0xF7	; 247
 202:	88 bb       	out	0x18, r24	; 24
		SEG7_PORT = digits [r4_1];
 204:	e0 91 7a 00 	lds	r30, 0x007A	; 0x80007a <r4_1>
 208:	f0 91 7b 00 	lds	r31, 0x007B	; 0x80007b <r4_1+0x1>
 20c:	ee 0f       	add	r30, r30
 20e:	ff 1f       	adc	r31, r31
 210:	e0 5a       	subi	r30, 0xA0	; 160
 212:	ff 4f       	sbci	r31, 0xFF	; 255
 214:	80 81       	ld	r24, Z
 216:	82 bb       	out	0x12, r24	; 18
	}
}
 218:	ff 91       	pop	r31
 21a:	ef 91       	pop	r30
 21c:	9f 91       	pop	r25
 21e:	8f 91       	pop	r24
 220:	0f 90       	pop	r0
 222:	0f be       	out	0x3f, r0	; 63
 224:	0f 90       	pop	r0
 226:	1f 90       	pop	r1
 228:	18 95       	reti

0000022a <__vector_14>:


ISR (ADC_vect)
{
 22a:	1f 92       	push	r1
 22c:	0f 92       	push	r0
 22e:	0f b6       	in	r0, 0x3f	; 63
 230:	0f 92       	push	r0
 232:	11 24       	eor	r1, r1
 234:	2f 93       	push	r18
 236:	3f 93       	push	r19
 238:	4f 93       	push	r20
 23a:	5f 93       	push	r21
 23c:	6f 93       	push	r22
 23e:	7f 93       	push	r23
 240:	8f 93       	push	r24
 242:	9f 93       	push	r25
 244:	af 93       	push	r26
 246:	bf 93       	push	r27
 248:	ef 93       	push	r30
 24a:	ff 93       	push	r31
	
	voltage = (float)ADC*VREF*100/1023*COEF_DIV;
 24c:	64 b1       	in	r22, 0x04	; 4
 24e:	75 b1       	in	r23, 0x05	; 5
 250:	80 e0       	ldi	r24, 0x00	; 0
 252:	90 e0       	ldi	r25, 0x00	; 0
 254:	02 d1       	rcall	.+516    	; 0x45a <__floatunsisf>
 256:	20 e0       	ldi	r18, 0x00	; 0
 258:	30 e0       	ldi	r19, 0x00	; 0
 25a:	40 ea       	ldi	r20, 0xA0	; 160
 25c:	50 e4       	ldi	r21, 0x40	; 64
 25e:	8b d1       	rcall	.+790    	; 0x576 <__mulsf3>
 260:	20 e0       	ldi	r18, 0x00	; 0
 262:	30 e0       	ldi	r19, 0x00	; 0
 264:	48 ec       	ldi	r20, 0xC8	; 200
 266:	52 e4       	ldi	r21, 0x42	; 66
 268:	86 d1       	rcall	.+780    	; 0x576 <__mulsf3>
 26a:	20 e0       	ldi	r18, 0x00	; 0
 26c:	30 ec       	ldi	r19, 0xC0	; 192
 26e:	4f e7       	ldi	r20, 0x7F	; 127
 270:	54 e4       	ldi	r21, 0x44	; 68
 272:	5f d0       	rcall	.+190    	; 0x332 <__divsf3>
 274:	20 e0       	ldi	r18, 0x00	; 0
 276:	30 e0       	ldi	r19, 0x00	; 0
 278:	40 e8       	ldi	r20, 0x80	; 128
 27a:	50 e4       	ldi	r21, 0x40	; 64
 27c:	7c d1       	rcall	.+760    	; 0x576 <__mulsf3>
 27e:	60 93 74 00 	sts	0x0074, r22	; 0x800074 <__data_end>
 282:	70 93 75 00 	sts	0x0075, r23	; 0x800075 <__data_end+0x1>
 286:	80 93 76 00 	sts	0x0076, r24	; 0x800076 <__data_end+0x2>
 28a:	90 93 77 00 	sts	0x0077, r25	; 0x800077 <__data_end+0x3>
	
	chislo(voltage);
 28e:	b9 d0       	rcall	.+370    	; 0x402 <__fixunssfsi>
 290:	cb 01       	movw	r24, r22
 292:	e5 de       	rcall	.-566    	; 0x5e <chislo>
}
 294:	ff 91       	pop	r31
 296:	ef 91       	pop	r30
 298:	bf 91       	pop	r27
 29a:	af 91       	pop	r26
 29c:	9f 91       	pop	r25
 29e:	8f 91       	pop	r24
 2a0:	7f 91       	pop	r23
 2a2:	6f 91       	pop	r22
 2a4:	5f 91       	pop	r21
 2a6:	4f 91       	pop	r20
 2a8:	3f 91       	pop	r19
 2aa:	2f 91       	pop	r18
 2ac:	0f 90       	pop	r0
 2ae:	0f be       	out	0x3f, r0	; 63
 2b0:	0f 90       	pop	r0
 2b2:	1f 90       	pop	r1
 2b4:	18 95       	reti

000002b6 <ADC_settings>:

void ADC_settings (void)
{
	DDRB |= (1<<1) | (1<<0);
 2b6:	87 b3       	in	r24, 0x17	; 23
 2b8:	83 60       	ori	r24, 0x03	; 3
 2ba:	87 bb       	out	0x17, r24	; 23
	PORTB &= ~((1<<0) | (1<<0));
 2bc:	88 b3       	in	r24, 0x18	; 24
 2be:	8e 7f       	andi	r24, 0xFE	; 254
 2c0:	88 bb       	out	0x18, r24	; 24
	
	DDRC &= (1<<3);
 2c2:	84 b3       	in	r24, 0x14	; 20
 2c4:	88 70       	andi	r24, 0x08	; 8
 2c6:	84 bb       	out	0x14, r24	; 20
	
	ADCSRA |= (1<<7); //ADC enable
 2c8:	86 b1       	in	r24, 0x06	; 6
 2ca:	80 68       	ori	r24, 0x80	; 128
 2cc:	86 b9       	out	0x06, r24	; 6
	ADCSRA |= (1<<5); //ADC free running select
 2ce:	86 b1       	in	r24, 0x06	; 6
 2d0:	80 62       	ori	r24, 0x20	; 32
 2d2:	86 b9       	out	0x06, r24	; 6
	
	//Fd = Fclk/8
	ADCSRA |= (1<<1) | (1<<0);
 2d4:	86 b1       	in	r24, 0x06	; 6
 2d6:	83 60       	ori	r24, 0x03	; 3
 2d8:	86 b9       	out	0x06, r24	; 6
	ADCSRA &= ~(1<<2);
 2da:	86 b1       	in	r24, 0x06	; 6
 2dc:	8b 7f       	andi	r24, 0xFB	; 251
 2de:	86 b9       	out	0x06, r24	; 6
	
	//External 5V
	ADMUX &= ~(1<<7);
 2e0:	87 b1       	in	r24, 0x07	; 7
 2e2:	8f 77       	andi	r24, 0x7F	; 127
 2e4:	87 b9       	out	0x07, r24	; 7
	ADMUX |= (1<<6);
 2e6:	87 b1       	in	r24, 0x07	; 7
 2e8:	80 64       	ori	r24, 0x40	; 64
 2ea:	87 b9       	out	0x07, r24	; 7
	
	ADMUX &= ~(1<<5); //right
 2ec:	87 b1       	in	r24, 0x07	; 7
 2ee:	8f 7d       	andi	r24, 0xDF	; 223
 2f0:	87 b9       	out	0x07, r24	; 7
	
	//3 channel
	ADMUX &= ~((1<<3) | (1<<2));
 2f2:	87 b1       	in	r24, 0x07	; 7
 2f4:	83 7f       	andi	r24, 0xF3	; 243
 2f6:	87 b9       	out	0x07, r24	; 7
	ADMUX |= (1<<1) | (1<<0);
 2f8:	87 b1       	in	r24, 0x07	; 7
 2fa:	83 60       	ori	r24, 0x03	; 3
 2fc:	87 b9       	out	0x07, r24	; 7
	
	ADCSRA |= (1<<3); // Enable ADC interrupt
 2fe:	86 b1       	in	r24, 0x06	; 6
 300:	88 60       	ori	r24, 0x08	; 8
 302:	86 b9       	out	0x06, r24	; 6
	
	ADCSRA |= (1<<6); //ADC start
 304:	86 b1       	in	r24, 0x06	; 6
 306:	80 64       	ori	r24, 0x40	; 64
 308:	86 b9       	out	0x06, r24	; 6
 30a:	08 95       	ret

0000030c <main>:
}


int main(void)
{
	SEG7_DDR = 0xff;
 30c:	8f ef       	ldi	r24, 0xFF	; 255
 30e:	81 bb       	out	0x11, r24	; 17
	SEG7_PORT = 0x00;
 310:	12 ba       	out	0x12, r1	; 18
	
	DDRB |= (1<<0) | (1<<1) | (1<<2) | (1<<3);
 312:	87 b3       	in	r24, 0x17	; 23
 314:	8f 60       	ori	r24, 0x0F	; 15
 316:	87 bb       	out	0x17, r24	; 23
	PORTB |= (1<<0) | (1<<1) | (1<<2) | (1<<3);
 318:	88 b3       	in	r24, 0x18	; 24
 31a:	8f 60       	ori	r24, 0x0F	; 15
 31c:	88 bb       	out	0x18, r24	; 24
	
	TCCR0 |= (1<<1); // /8
 31e:	83 b7       	in	r24, 0x33	; 51
 320:	82 60       	ori	r24, 0x02	; 2
 322:	83 bf       	out	0x33, r24	; 51
	TCNT0 = 0;
 324:	12 be       	out	0x32, r1	; 50
	TIMSK |= (1<<0); //Timer/Counter0 Overflow Interrupt Enable
 326:	89 b7       	in	r24, 0x39	; 57
 328:	81 60       	ori	r24, 0x01	; 1
 32a:	89 bf       	out	0x39, r24	; 57
	
	ADC_settings ();
 32c:	c4 df       	rcall	.-120    	; 0x2b6 <ADC_settings>
	
	sei();
 32e:	78 94       	sei
 330:	ff cf       	rjmp	.-2      	; 0x330 <main+0x24>

00000332 <__divsf3>:
 332:	0c d0       	rcall	.+24     	; 0x34c <__divsf3x>
 334:	e6 c0       	rjmp	.+460    	; 0x502 <__fp_round>
 336:	de d0       	rcall	.+444    	; 0x4f4 <__fp_pscB>
 338:	40 f0       	brcs	.+16     	; 0x34a <__divsf3+0x18>
 33a:	d5 d0       	rcall	.+426    	; 0x4e6 <__fp_pscA>
 33c:	30 f0       	brcs	.+12     	; 0x34a <__divsf3+0x18>
 33e:	21 f4       	brne	.+8      	; 0x348 <__divsf3+0x16>
 340:	5f 3f       	cpi	r21, 0xFF	; 255
 342:	19 f0       	breq	.+6      	; 0x34a <__divsf3+0x18>
 344:	c7 c0       	rjmp	.+398    	; 0x4d4 <__fp_inf>
 346:	51 11       	cpse	r21, r1
 348:	10 c1       	rjmp	.+544    	; 0x56a <__fp_szero>
 34a:	ca c0       	rjmp	.+404    	; 0x4e0 <__fp_nan>

0000034c <__divsf3x>:
 34c:	eb d0       	rcall	.+470    	; 0x524 <__fp_split3>
 34e:	98 f3       	brcs	.-26     	; 0x336 <__divsf3+0x4>

00000350 <__divsf3_pse>:
 350:	99 23       	and	r25, r25
 352:	c9 f3       	breq	.-14     	; 0x346 <__divsf3+0x14>
 354:	55 23       	and	r21, r21
 356:	b1 f3       	breq	.-20     	; 0x344 <__divsf3+0x12>
 358:	95 1b       	sub	r25, r21
 35a:	55 0b       	sbc	r21, r21
 35c:	bb 27       	eor	r27, r27
 35e:	aa 27       	eor	r26, r26
 360:	62 17       	cp	r22, r18
 362:	73 07       	cpc	r23, r19
 364:	84 07       	cpc	r24, r20
 366:	38 f0       	brcs	.+14     	; 0x376 <__divsf3_pse+0x26>
 368:	9f 5f       	subi	r25, 0xFF	; 255
 36a:	5f 4f       	sbci	r21, 0xFF	; 255
 36c:	22 0f       	add	r18, r18
 36e:	33 1f       	adc	r19, r19
 370:	44 1f       	adc	r20, r20
 372:	aa 1f       	adc	r26, r26
 374:	a9 f3       	breq	.-22     	; 0x360 <__divsf3_pse+0x10>
 376:	33 d0       	rcall	.+102    	; 0x3de <__divsf3_pse+0x8e>
 378:	0e 2e       	mov	r0, r30
 37a:	3a f0       	brmi	.+14     	; 0x38a <__divsf3_pse+0x3a>
 37c:	e0 e8       	ldi	r30, 0x80	; 128
 37e:	30 d0       	rcall	.+96     	; 0x3e0 <__divsf3_pse+0x90>
 380:	91 50       	subi	r25, 0x01	; 1
 382:	50 40       	sbci	r21, 0x00	; 0
 384:	e6 95       	lsr	r30
 386:	00 1c       	adc	r0, r0
 388:	ca f7       	brpl	.-14     	; 0x37c <__divsf3_pse+0x2c>
 38a:	29 d0       	rcall	.+82     	; 0x3de <__divsf3_pse+0x8e>
 38c:	fe 2f       	mov	r31, r30
 38e:	27 d0       	rcall	.+78     	; 0x3de <__divsf3_pse+0x8e>
 390:	66 0f       	add	r22, r22
 392:	77 1f       	adc	r23, r23
 394:	88 1f       	adc	r24, r24
 396:	bb 1f       	adc	r27, r27
 398:	26 17       	cp	r18, r22
 39a:	37 07       	cpc	r19, r23
 39c:	48 07       	cpc	r20, r24
 39e:	ab 07       	cpc	r26, r27
 3a0:	b0 e8       	ldi	r27, 0x80	; 128
 3a2:	09 f0       	breq	.+2      	; 0x3a6 <__divsf3_pse+0x56>
 3a4:	bb 0b       	sbc	r27, r27
 3a6:	80 2d       	mov	r24, r0
 3a8:	bf 01       	movw	r22, r30
 3aa:	ff 27       	eor	r31, r31
 3ac:	93 58       	subi	r25, 0x83	; 131
 3ae:	5f 4f       	sbci	r21, 0xFF	; 255
 3b0:	2a f0       	brmi	.+10     	; 0x3bc <__divsf3_pse+0x6c>
 3b2:	9e 3f       	cpi	r25, 0xFE	; 254
 3b4:	51 05       	cpc	r21, r1
 3b6:	68 f0       	brcs	.+26     	; 0x3d2 <__divsf3_pse+0x82>
 3b8:	8d c0       	rjmp	.+282    	; 0x4d4 <__fp_inf>
 3ba:	d7 c0       	rjmp	.+430    	; 0x56a <__fp_szero>
 3bc:	5f 3f       	cpi	r21, 0xFF	; 255
 3be:	ec f3       	brlt	.-6      	; 0x3ba <__divsf3_pse+0x6a>
 3c0:	98 3e       	cpi	r25, 0xE8	; 232
 3c2:	dc f3       	brlt	.-10     	; 0x3ba <__divsf3_pse+0x6a>
 3c4:	86 95       	lsr	r24
 3c6:	77 95       	ror	r23
 3c8:	67 95       	ror	r22
 3ca:	b7 95       	ror	r27
 3cc:	f7 95       	ror	r31
 3ce:	9f 5f       	subi	r25, 0xFF	; 255
 3d0:	c9 f7       	brne	.-14     	; 0x3c4 <__divsf3_pse+0x74>
 3d2:	88 0f       	add	r24, r24
 3d4:	91 1d       	adc	r25, r1
 3d6:	96 95       	lsr	r25
 3d8:	87 95       	ror	r24
 3da:	97 f9       	bld	r25, 7
 3dc:	08 95       	ret
 3de:	e1 e0       	ldi	r30, 0x01	; 1
 3e0:	66 0f       	add	r22, r22
 3e2:	77 1f       	adc	r23, r23
 3e4:	88 1f       	adc	r24, r24
 3e6:	bb 1f       	adc	r27, r27
 3e8:	62 17       	cp	r22, r18
 3ea:	73 07       	cpc	r23, r19
 3ec:	84 07       	cpc	r24, r20
 3ee:	ba 07       	cpc	r27, r26
 3f0:	20 f0       	brcs	.+8      	; 0x3fa <__divsf3_pse+0xaa>
 3f2:	62 1b       	sub	r22, r18
 3f4:	73 0b       	sbc	r23, r19
 3f6:	84 0b       	sbc	r24, r20
 3f8:	ba 0b       	sbc	r27, r26
 3fa:	ee 1f       	adc	r30, r30
 3fc:	88 f7       	brcc	.-30     	; 0x3e0 <__divsf3_pse+0x90>
 3fe:	e0 95       	com	r30
 400:	08 95       	ret

00000402 <__fixunssfsi>:
 402:	98 d0       	rcall	.+304    	; 0x534 <__fp_splitA>
 404:	88 f0       	brcs	.+34     	; 0x428 <__fixunssfsi+0x26>
 406:	9f 57       	subi	r25, 0x7F	; 127
 408:	90 f0       	brcs	.+36     	; 0x42e <__fixunssfsi+0x2c>
 40a:	b9 2f       	mov	r27, r25
 40c:	99 27       	eor	r25, r25
 40e:	b7 51       	subi	r27, 0x17	; 23
 410:	a0 f0       	brcs	.+40     	; 0x43a <__fixunssfsi+0x38>
 412:	d1 f0       	breq	.+52     	; 0x448 <__fixunssfsi+0x46>
 414:	66 0f       	add	r22, r22
 416:	77 1f       	adc	r23, r23
 418:	88 1f       	adc	r24, r24
 41a:	99 1f       	adc	r25, r25
 41c:	1a f0       	brmi	.+6      	; 0x424 <__fixunssfsi+0x22>
 41e:	ba 95       	dec	r27
 420:	c9 f7       	brne	.-14     	; 0x414 <__fixunssfsi+0x12>
 422:	12 c0       	rjmp	.+36     	; 0x448 <__fixunssfsi+0x46>
 424:	b1 30       	cpi	r27, 0x01	; 1
 426:	81 f0       	breq	.+32     	; 0x448 <__fixunssfsi+0x46>
 428:	9f d0       	rcall	.+318    	; 0x568 <__fp_zero>
 42a:	b1 e0       	ldi	r27, 0x01	; 1
 42c:	08 95       	ret
 42e:	9c c0       	rjmp	.+312    	; 0x568 <__fp_zero>
 430:	67 2f       	mov	r22, r23
 432:	78 2f       	mov	r23, r24
 434:	88 27       	eor	r24, r24
 436:	b8 5f       	subi	r27, 0xF8	; 248
 438:	39 f0       	breq	.+14     	; 0x448 <__fixunssfsi+0x46>
 43a:	b9 3f       	cpi	r27, 0xF9	; 249
 43c:	cc f3       	brlt	.-14     	; 0x430 <__fixunssfsi+0x2e>
 43e:	86 95       	lsr	r24
 440:	77 95       	ror	r23
 442:	67 95       	ror	r22
 444:	b3 95       	inc	r27
 446:	d9 f7       	brne	.-10     	; 0x43e <__fixunssfsi+0x3c>
 448:	3e f4       	brtc	.+14     	; 0x458 <__fixunssfsi+0x56>
 44a:	90 95       	com	r25
 44c:	80 95       	com	r24
 44e:	70 95       	com	r23
 450:	61 95       	neg	r22
 452:	7f 4f       	sbci	r23, 0xFF	; 255
 454:	8f 4f       	sbci	r24, 0xFF	; 255
 456:	9f 4f       	sbci	r25, 0xFF	; 255
 458:	08 95       	ret

0000045a <__floatunsisf>:
 45a:	e8 94       	clt
 45c:	09 c0       	rjmp	.+18     	; 0x470 <__stack+0x11>

0000045e <__floatsisf>:
 45e:	97 fb       	bst	r25, 7
 460:	3e f4       	brtc	.+14     	; 0x470 <__stack+0x11>
 462:	90 95       	com	r25
 464:	80 95       	com	r24
 466:	70 95       	com	r23
 468:	61 95       	neg	r22
 46a:	7f 4f       	sbci	r23, 0xFF	; 255
 46c:	8f 4f       	sbci	r24, 0xFF	; 255
 46e:	9f 4f       	sbci	r25, 0xFF	; 255
 470:	99 23       	and	r25, r25
 472:	a9 f0       	breq	.+42     	; 0x49e <__stack+0x3f>
 474:	f9 2f       	mov	r31, r25
 476:	96 e9       	ldi	r25, 0x96	; 150
 478:	bb 27       	eor	r27, r27
 47a:	93 95       	inc	r25
 47c:	f6 95       	lsr	r31
 47e:	87 95       	ror	r24
 480:	77 95       	ror	r23
 482:	67 95       	ror	r22
 484:	b7 95       	ror	r27
 486:	f1 11       	cpse	r31, r1
 488:	f8 cf       	rjmp	.-16     	; 0x47a <__stack+0x1b>
 48a:	fa f4       	brpl	.+62     	; 0x4ca <__stack+0x6b>
 48c:	bb 0f       	add	r27, r27
 48e:	11 f4       	brne	.+4      	; 0x494 <__stack+0x35>
 490:	60 ff       	sbrs	r22, 0
 492:	1b c0       	rjmp	.+54     	; 0x4ca <__stack+0x6b>
 494:	6f 5f       	subi	r22, 0xFF	; 255
 496:	7f 4f       	sbci	r23, 0xFF	; 255
 498:	8f 4f       	sbci	r24, 0xFF	; 255
 49a:	9f 4f       	sbci	r25, 0xFF	; 255
 49c:	16 c0       	rjmp	.+44     	; 0x4ca <__stack+0x6b>
 49e:	88 23       	and	r24, r24
 4a0:	11 f0       	breq	.+4      	; 0x4a6 <__stack+0x47>
 4a2:	96 e9       	ldi	r25, 0x96	; 150
 4a4:	11 c0       	rjmp	.+34     	; 0x4c8 <__stack+0x69>
 4a6:	77 23       	and	r23, r23
 4a8:	21 f0       	breq	.+8      	; 0x4b2 <__stack+0x53>
 4aa:	9e e8       	ldi	r25, 0x8E	; 142
 4ac:	87 2f       	mov	r24, r23
 4ae:	76 2f       	mov	r23, r22
 4b0:	05 c0       	rjmp	.+10     	; 0x4bc <__stack+0x5d>
 4b2:	66 23       	and	r22, r22
 4b4:	71 f0       	breq	.+28     	; 0x4d2 <__stack+0x73>
 4b6:	96 e8       	ldi	r25, 0x86	; 134
 4b8:	86 2f       	mov	r24, r22
 4ba:	70 e0       	ldi	r23, 0x00	; 0
 4bc:	60 e0       	ldi	r22, 0x00	; 0
 4be:	2a f0       	brmi	.+10     	; 0x4ca <__stack+0x6b>
 4c0:	9a 95       	dec	r25
 4c2:	66 0f       	add	r22, r22
 4c4:	77 1f       	adc	r23, r23
 4c6:	88 1f       	adc	r24, r24
 4c8:	da f7       	brpl	.-10     	; 0x4c0 <__stack+0x61>
 4ca:	88 0f       	add	r24, r24
 4cc:	96 95       	lsr	r25
 4ce:	87 95       	ror	r24
 4d0:	97 f9       	bld	r25, 7
 4d2:	08 95       	ret

000004d4 <__fp_inf>:
 4d4:	97 f9       	bld	r25, 7
 4d6:	9f 67       	ori	r25, 0x7F	; 127
 4d8:	80 e8       	ldi	r24, 0x80	; 128
 4da:	70 e0       	ldi	r23, 0x00	; 0
 4dc:	60 e0       	ldi	r22, 0x00	; 0
 4de:	08 95       	ret

000004e0 <__fp_nan>:
 4e0:	9f ef       	ldi	r25, 0xFF	; 255
 4e2:	80 ec       	ldi	r24, 0xC0	; 192
 4e4:	08 95       	ret

000004e6 <__fp_pscA>:
 4e6:	00 24       	eor	r0, r0
 4e8:	0a 94       	dec	r0
 4ea:	16 16       	cp	r1, r22
 4ec:	17 06       	cpc	r1, r23
 4ee:	18 06       	cpc	r1, r24
 4f0:	09 06       	cpc	r0, r25
 4f2:	08 95       	ret

000004f4 <__fp_pscB>:
 4f4:	00 24       	eor	r0, r0
 4f6:	0a 94       	dec	r0
 4f8:	12 16       	cp	r1, r18
 4fa:	13 06       	cpc	r1, r19
 4fc:	14 06       	cpc	r1, r20
 4fe:	05 06       	cpc	r0, r21
 500:	08 95       	ret

00000502 <__fp_round>:
 502:	09 2e       	mov	r0, r25
 504:	03 94       	inc	r0
 506:	00 0c       	add	r0, r0
 508:	11 f4       	brne	.+4      	; 0x50e <__fp_round+0xc>
 50a:	88 23       	and	r24, r24
 50c:	52 f0       	brmi	.+20     	; 0x522 <__fp_round+0x20>
 50e:	bb 0f       	add	r27, r27
 510:	40 f4       	brcc	.+16     	; 0x522 <__fp_round+0x20>
 512:	bf 2b       	or	r27, r31
 514:	11 f4       	brne	.+4      	; 0x51a <__fp_round+0x18>
 516:	60 ff       	sbrs	r22, 0
 518:	04 c0       	rjmp	.+8      	; 0x522 <__fp_round+0x20>
 51a:	6f 5f       	subi	r22, 0xFF	; 255
 51c:	7f 4f       	sbci	r23, 0xFF	; 255
 51e:	8f 4f       	sbci	r24, 0xFF	; 255
 520:	9f 4f       	sbci	r25, 0xFF	; 255
 522:	08 95       	ret

00000524 <__fp_split3>:
 524:	57 fd       	sbrc	r21, 7
 526:	90 58       	subi	r25, 0x80	; 128
 528:	44 0f       	add	r20, r20
 52a:	55 1f       	adc	r21, r21
 52c:	59 f0       	breq	.+22     	; 0x544 <__fp_splitA+0x10>
 52e:	5f 3f       	cpi	r21, 0xFF	; 255
 530:	71 f0       	breq	.+28     	; 0x54e <__fp_splitA+0x1a>
 532:	47 95       	ror	r20

00000534 <__fp_splitA>:
 534:	88 0f       	add	r24, r24
 536:	97 fb       	bst	r25, 7
 538:	99 1f       	adc	r25, r25
 53a:	61 f0       	breq	.+24     	; 0x554 <__fp_splitA+0x20>
 53c:	9f 3f       	cpi	r25, 0xFF	; 255
 53e:	79 f0       	breq	.+30     	; 0x55e <__fp_splitA+0x2a>
 540:	87 95       	ror	r24
 542:	08 95       	ret
 544:	12 16       	cp	r1, r18
 546:	13 06       	cpc	r1, r19
 548:	14 06       	cpc	r1, r20
 54a:	55 1f       	adc	r21, r21
 54c:	f2 cf       	rjmp	.-28     	; 0x532 <__fp_split3+0xe>
 54e:	46 95       	lsr	r20
 550:	f1 df       	rcall	.-30     	; 0x534 <__fp_splitA>
 552:	08 c0       	rjmp	.+16     	; 0x564 <__fp_splitA+0x30>
 554:	16 16       	cp	r1, r22
 556:	17 06       	cpc	r1, r23
 558:	18 06       	cpc	r1, r24
 55a:	99 1f       	adc	r25, r25
 55c:	f1 cf       	rjmp	.-30     	; 0x540 <__fp_splitA+0xc>
 55e:	86 95       	lsr	r24
 560:	71 05       	cpc	r23, r1
 562:	61 05       	cpc	r22, r1
 564:	08 94       	sec
 566:	08 95       	ret

00000568 <__fp_zero>:
 568:	e8 94       	clt

0000056a <__fp_szero>:
 56a:	bb 27       	eor	r27, r27
 56c:	66 27       	eor	r22, r22
 56e:	77 27       	eor	r23, r23
 570:	cb 01       	movw	r24, r22
 572:	97 f9       	bld	r25, 7
 574:	08 95       	ret

00000576 <__mulsf3>:
 576:	0b d0       	rcall	.+22     	; 0x58e <__mulsf3x>
 578:	c4 cf       	rjmp	.-120    	; 0x502 <__fp_round>
 57a:	b5 df       	rcall	.-150    	; 0x4e6 <__fp_pscA>
 57c:	28 f0       	brcs	.+10     	; 0x588 <__mulsf3+0x12>
 57e:	ba df       	rcall	.-140    	; 0x4f4 <__fp_pscB>
 580:	18 f0       	brcs	.+6      	; 0x588 <__mulsf3+0x12>
 582:	95 23       	and	r25, r21
 584:	09 f0       	breq	.+2      	; 0x588 <__mulsf3+0x12>
 586:	a6 cf       	rjmp	.-180    	; 0x4d4 <__fp_inf>
 588:	ab cf       	rjmp	.-170    	; 0x4e0 <__fp_nan>
 58a:	11 24       	eor	r1, r1
 58c:	ee cf       	rjmp	.-36     	; 0x56a <__fp_szero>

0000058e <__mulsf3x>:
 58e:	ca df       	rcall	.-108    	; 0x524 <__fp_split3>
 590:	a0 f3       	brcs	.-24     	; 0x57a <__mulsf3+0x4>

00000592 <__mulsf3_pse>:
 592:	95 9f       	mul	r25, r21
 594:	d1 f3       	breq	.-12     	; 0x58a <__mulsf3+0x14>
 596:	95 0f       	add	r25, r21
 598:	50 e0       	ldi	r21, 0x00	; 0
 59a:	55 1f       	adc	r21, r21
 59c:	62 9f       	mul	r22, r18
 59e:	f0 01       	movw	r30, r0
 5a0:	72 9f       	mul	r23, r18
 5a2:	bb 27       	eor	r27, r27
 5a4:	f0 0d       	add	r31, r0
 5a6:	b1 1d       	adc	r27, r1
 5a8:	63 9f       	mul	r22, r19
 5aa:	aa 27       	eor	r26, r26
 5ac:	f0 0d       	add	r31, r0
 5ae:	b1 1d       	adc	r27, r1
 5b0:	aa 1f       	adc	r26, r26
 5b2:	64 9f       	mul	r22, r20
 5b4:	66 27       	eor	r22, r22
 5b6:	b0 0d       	add	r27, r0
 5b8:	a1 1d       	adc	r26, r1
 5ba:	66 1f       	adc	r22, r22
 5bc:	82 9f       	mul	r24, r18
 5be:	22 27       	eor	r18, r18
 5c0:	b0 0d       	add	r27, r0
 5c2:	a1 1d       	adc	r26, r1
 5c4:	62 1f       	adc	r22, r18
 5c6:	73 9f       	mul	r23, r19
 5c8:	b0 0d       	add	r27, r0
 5ca:	a1 1d       	adc	r26, r1
 5cc:	62 1f       	adc	r22, r18
 5ce:	83 9f       	mul	r24, r19
 5d0:	a0 0d       	add	r26, r0
 5d2:	61 1d       	adc	r22, r1
 5d4:	22 1f       	adc	r18, r18
 5d6:	74 9f       	mul	r23, r20
 5d8:	33 27       	eor	r19, r19
 5da:	a0 0d       	add	r26, r0
 5dc:	61 1d       	adc	r22, r1
 5de:	23 1f       	adc	r18, r19
 5e0:	84 9f       	mul	r24, r20
 5e2:	60 0d       	add	r22, r0
 5e4:	21 1d       	adc	r18, r1
 5e6:	82 2f       	mov	r24, r18
 5e8:	76 2f       	mov	r23, r22
 5ea:	6a 2f       	mov	r22, r26
 5ec:	11 24       	eor	r1, r1
 5ee:	9f 57       	subi	r25, 0x7F	; 127
 5f0:	50 40       	sbci	r21, 0x00	; 0
 5f2:	8a f0       	brmi	.+34     	; 0x616 <__mulsf3_pse+0x84>
 5f4:	e1 f0       	breq	.+56     	; 0x62e <__mulsf3_pse+0x9c>
 5f6:	88 23       	and	r24, r24
 5f8:	4a f0       	brmi	.+18     	; 0x60c <__mulsf3_pse+0x7a>
 5fa:	ee 0f       	add	r30, r30
 5fc:	ff 1f       	adc	r31, r31
 5fe:	bb 1f       	adc	r27, r27
 600:	66 1f       	adc	r22, r22
 602:	77 1f       	adc	r23, r23
 604:	88 1f       	adc	r24, r24
 606:	91 50       	subi	r25, 0x01	; 1
 608:	50 40       	sbci	r21, 0x00	; 0
 60a:	a9 f7       	brne	.-22     	; 0x5f6 <__mulsf3_pse+0x64>
 60c:	9e 3f       	cpi	r25, 0xFE	; 254
 60e:	51 05       	cpc	r21, r1
 610:	70 f0       	brcs	.+28     	; 0x62e <__mulsf3_pse+0x9c>
 612:	60 cf       	rjmp	.-320    	; 0x4d4 <__fp_inf>
 614:	aa cf       	rjmp	.-172    	; 0x56a <__fp_szero>
 616:	5f 3f       	cpi	r21, 0xFF	; 255
 618:	ec f3       	brlt	.-6      	; 0x614 <__mulsf3_pse+0x82>
 61a:	98 3e       	cpi	r25, 0xE8	; 232
 61c:	dc f3       	brlt	.-10     	; 0x614 <__mulsf3_pse+0x82>
 61e:	86 95       	lsr	r24
 620:	77 95       	ror	r23
 622:	67 95       	ror	r22
 624:	b7 95       	ror	r27
 626:	f7 95       	ror	r31
 628:	e7 95       	ror	r30
 62a:	9f 5f       	subi	r25, 0xFF	; 255
 62c:	c1 f7       	brne	.-16     	; 0x61e <__mulsf3_pse+0x8c>
 62e:	fe 2b       	or	r31, r30
 630:	88 0f       	add	r24, r24
 632:	91 1d       	adc	r25, r1
 634:	96 95       	lsr	r25
 636:	87 95       	ror	r24
 638:	97 f9       	bld	r25, 7
 63a:	08 95       	ret

0000063c <__umulhisi3>:
 63c:	a2 9f       	mul	r26, r18
 63e:	b0 01       	movw	r22, r0
 640:	b3 9f       	mul	r27, r19
 642:	c0 01       	movw	r24, r0
 644:	a3 9f       	mul	r26, r19
 646:	01 d0       	rcall	.+2      	; 0x64a <__umulhisi3+0xe>
 648:	b2 9f       	mul	r27, r18
 64a:	70 0d       	add	r23, r0
 64c:	81 1d       	adc	r24, r1
 64e:	11 24       	eor	r1, r1
 650:	91 1d       	adc	r25, r1
 652:	08 95       	ret

00000654 <_exit>:
 654:	f8 94       	cli

00000656 <__stop_program>:
 656:	ff cf       	rjmp	.-2      	; 0x656 <__stop_program>
